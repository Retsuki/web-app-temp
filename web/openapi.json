{
  "openapi": "3.0.0",
  "info": { "title": "API", "version": "1.0.0" },
  "components": {
    "schemas": {
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "プロフィールID" },
          "userId": { "type": "string", "format": "uuid", "description": "ユーザーID" },
          "email": { "type": "string", "format": "email", "description": "メールアドレス" },
          "nickname": { "type": "string", "description": "ニックネーム" },
          "language": { "type": "string", "nullable": true, "description": "言語設定" },
          "createdAt": { "type": "string", "format": "date-time", "description": "作成日時" },
          "updatedAt": { "type": "string", "format": "date-time", "description": "更新日時" }
        },
        "required": ["id", "userId", "email", "nickname", "language", "createdAt", "updatedAt"]
      },
      "ErrBadRequest": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "UNAUTHORIZED",
                  "FORBIDDEN_OPERATION",
                  "NOT_FOUND",
                  "INVALID_TOKEN",
                  "INVALID_TYPE",
                  "INVALID_REQUEST",
                  "UNKNOWN_ERROR",
                  "CONFLICT",
                  "PROFILE_NOT_FOUND",
                  "RESOURCE_NOT_FOUND",
                  "FORBIDDEN",
                  "INTERNAL_SERVER_ERROR",
                  "VALIDATION_ERROR",
                  "INTERNAL_ERROR",
                  "EXTERNAL_API_ERROR",
                  "TIMEOUT",
                  "BAD_REQUEST",
                  "POST_NOT_FOUND",
                  "INSUFFICIENT_CREDITS",
                  "INSUFFICIENT_PERMISSIONS",
                  "TOKEN_EXPIRED",
                  "AI_AGENT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_ACTIVE",
                  "TIKTOK_ACCOUNT_NOT_LINKED",
                  "TIKTOK_TOKEN_REFRESH_FAILED",
                  "TIKTOK_VIDEO_INIT_FAILED",
                  "TIKTOK_VIDEO_UPLOAD_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_FAILED",
                  "TIKTOK_VIDEO_STATUS_CHECK_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_TIMEOUT",
                  "TIKTOK_CREATOR_INFO_FAILED",
                  "TIKTOK_UPLOAD_URL_EXPIRED",
                  "TIKTOK_CHUNK_UPLOAD_FAILED"
                ],
                "description": "エラーコード",
                "example": "INVALID_TOKEN"
              },
              "message": { "type": "string", "description": "エラーの説明メッセージ" },
              "requestId": {
                "type": "string",
                "description": "リクエストID",
                "example": "req_1234"
              },
              "statusCode": {
                "type": "integer",
                "description": "HTTPステータスコード",
                "example": 400
              }
            },
            "required": ["code", "message", "requestId", "statusCode"]
          }
        },
        "required": ["error"]
      },
      "ErrUnauthorized": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "UNAUTHORIZED",
                  "FORBIDDEN_OPERATION",
                  "NOT_FOUND",
                  "INVALID_TOKEN",
                  "INVALID_TYPE",
                  "INVALID_REQUEST",
                  "UNKNOWN_ERROR",
                  "CONFLICT",
                  "PROFILE_NOT_FOUND",
                  "RESOURCE_NOT_FOUND",
                  "FORBIDDEN",
                  "INTERNAL_SERVER_ERROR",
                  "VALIDATION_ERROR",
                  "INTERNAL_ERROR",
                  "EXTERNAL_API_ERROR",
                  "TIMEOUT",
                  "BAD_REQUEST",
                  "POST_NOT_FOUND",
                  "INSUFFICIENT_CREDITS",
                  "INSUFFICIENT_PERMISSIONS",
                  "TOKEN_EXPIRED",
                  "AI_AGENT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_ACTIVE",
                  "TIKTOK_ACCOUNT_NOT_LINKED",
                  "TIKTOK_TOKEN_REFRESH_FAILED",
                  "TIKTOK_VIDEO_INIT_FAILED",
                  "TIKTOK_VIDEO_UPLOAD_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_FAILED",
                  "TIKTOK_VIDEO_STATUS_CHECK_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_TIMEOUT",
                  "TIKTOK_CREATOR_INFO_FAILED",
                  "TIKTOK_UPLOAD_URL_EXPIRED",
                  "TIKTOK_CHUNK_UPLOAD_FAILED"
                ],
                "description": "エラーコード",
                "example": "UNAUTHORIZED"
              },
              "message": { "type": "string", "description": "エラーの説明メッセージ" },
              "requestId": {
                "type": "string",
                "description": "リクエストID",
                "example": "req_1234"
              },
              "statusCode": {
                "type": "integer",
                "description": "HTTPステータスコード",
                "example": 401
              }
            },
            "required": ["code", "message", "requestId", "statusCode"]
          }
        },
        "required": ["error"]
      },
      "ErrForbidden": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "UNAUTHORIZED",
                  "FORBIDDEN_OPERATION",
                  "NOT_FOUND",
                  "INVALID_TOKEN",
                  "INVALID_TYPE",
                  "INVALID_REQUEST",
                  "UNKNOWN_ERROR",
                  "CONFLICT",
                  "PROFILE_NOT_FOUND",
                  "RESOURCE_NOT_FOUND",
                  "FORBIDDEN",
                  "INTERNAL_SERVER_ERROR",
                  "VALIDATION_ERROR",
                  "INTERNAL_ERROR",
                  "EXTERNAL_API_ERROR",
                  "TIMEOUT",
                  "BAD_REQUEST",
                  "POST_NOT_FOUND",
                  "INSUFFICIENT_CREDITS",
                  "INSUFFICIENT_PERMISSIONS",
                  "TOKEN_EXPIRED",
                  "AI_AGENT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_ACTIVE",
                  "TIKTOK_ACCOUNT_NOT_LINKED",
                  "TIKTOK_TOKEN_REFRESH_FAILED",
                  "TIKTOK_VIDEO_INIT_FAILED",
                  "TIKTOK_VIDEO_UPLOAD_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_FAILED",
                  "TIKTOK_VIDEO_STATUS_CHECK_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_TIMEOUT",
                  "TIKTOK_CREATOR_INFO_FAILED",
                  "TIKTOK_UPLOAD_URL_EXPIRED",
                  "TIKTOK_CHUNK_UPLOAD_FAILED"
                ],
                "description": "エラーコード",
                "example": "FORBIDDEN_OPERATION"
              },
              "message": { "type": "string", "description": "エラーの説明メッセージ" },
              "requestId": {
                "type": "string",
                "description": "リクエストID",
                "example": "req_1234"
              },
              "statusCode": {
                "type": "integer",
                "description": "HTTPステータスコード",
                "example": 403
              }
            },
            "required": ["code", "message", "requestId", "statusCode"]
          }
        },
        "required": ["error"]
      },
      "ErrNotFound": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "UNAUTHORIZED",
                  "FORBIDDEN_OPERATION",
                  "NOT_FOUND",
                  "INVALID_TOKEN",
                  "INVALID_TYPE",
                  "INVALID_REQUEST",
                  "UNKNOWN_ERROR",
                  "CONFLICT",
                  "PROFILE_NOT_FOUND",
                  "RESOURCE_NOT_FOUND",
                  "FORBIDDEN",
                  "INTERNAL_SERVER_ERROR",
                  "VALIDATION_ERROR",
                  "INTERNAL_ERROR",
                  "EXTERNAL_API_ERROR",
                  "TIMEOUT",
                  "BAD_REQUEST",
                  "POST_NOT_FOUND",
                  "INSUFFICIENT_CREDITS",
                  "INSUFFICIENT_PERMISSIONS",
                  "TOKEN_EXPIRED",
                  "AI_AGENT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_ACTIVE",
                  "TIKTOK_ACCOUNT_NOT_LINKED",
                  "TIKTOK_TOKEN_REFRESH_FAILED",
                  "TIKTOK_VIDEO_INIT_FAILED",
                  "TIKTOK_VIDEO_UPLOAD_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_FAILED",
                  "TIKTOK_VIDEO_STATUS_CHECK_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_TIMEOUT",
                  "TIKTOK_CREATOR_INFO_FAILED",
                  "TIKTOK_UPLOAD_URL_EXPIRED",
                  "TIKTOK_CHUNK_UPLOAD_FAILED"
                ],
                "description": "エラーコード",
                "example": "NOT_FOUND"
              },
              "message": { "type": "string", "description": "エラーの説明メッセージ" },
              "requestId": {
                "type": "string",
                "description": "リクエストID",
                "example": "req_1234"
              },
              "statusCode": {
                "type": "integer",
                "description": "HTTPステータスコード",
                "example": 404
              }
            },
            "required": ["code", "message", "requestId", "statusCode"]
          }
        },
        "required": ["error"]
      },
      "ErrConflict": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "UNAUTHORIZED",
                  "FORBIDDEN_OPERATION",
                  "NOT_FOUND",
                  "INVALID_TOKEN",
                  "INVALID_TYPE",
                  "INVALID_REQUEST",
                  "UNKNOWN_ERROR",
                  "CONFLICT",
                  "PROFILE_NOT_FOUND",
                  "RESOURCE_NOT_FOUND",
                  "FORBIDDEN",
                  "INTERNAL_SERVER_ERROR",
                  "VALIDATION_ERROR",
                  "INTERNAL_ERROR",
                  "EXTERNAL_API_ERROR",
                  "TIMEOUT",
                  "BAD_REQUEST",
                  "POST_NOT_FOUND",
                  "INSUFFICIENT_CREDITS",
                  "INSUFFICIENT_PERMISSIONS",
                  "TOKEN_EXPIRED",
                  "AI_AGENT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_ACTIVE",
                  "TIKTOK_ACCOUNT_NOT_LINKED",
                  "TIKTOK_TOKEN_REFRESH_FAILED",
                  "TIKTOK_VIDEO_INIT_FAILED",
                  "TIKTOK_VIDEO_UPLOAD_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_FAILED",
                  "TIKTOK_VIDEO_STATUS_CHECK_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_TIMEOUT",
                  "TIKTOK_CREATOR_INFO_FAILED",
                  "TIKTOK_UPLOAD_URL_EXPIRED",
                  "TIKTOK_CHUNK_UPLOAD_FAILED"
                ],
                "description": "エラーコード",
                "example": "CONFLICT"
              },
              "message": { "type": "string", "description": "エラーの説明メッセージ" },
              "requestId": {
                "type": "string",
                "description": "リクエストID",
                "example": "req_1234"
              },
              "statusCode": {
                "type": "integer",
                "description": "HTTPステータスコード",
                "example": 409
              }
            },
            "required": ["code", "message", "requestId", "statusCode"]
          }
        },
        "required": ["error"]
      },
      "ErrInternalServer": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "UNAUTHORIZED",
                  "FORBIDDEN_OPERATION",
                  "NOT_FOUND",
                  "INVALID_TOKEN",
                  "INVALID_TYPE",
                  "INVALID_REQUEST",
                  "UNKNOWN_ERROR",
                  "CONFLICT",
                  "PROFILE_NOT_FOUND",
                  "RESOURCE_NOT_FOUND",
                  "FORBIDDEN",
                  "INTERNAL_SERVER_ERROR",
                  "VALIDATION_ERROR",
                  "INTERNAL_ERROR",
                  "EXTERNAL_API_ERROR",
                  "TIMEOUT",
                  "BAD_REQUEST",
                  "POST_NOT_FOUND",
                  "INSUFFICIENT_CREDITS",
                  "INSUFFICIENT_PERMISSIONS",
                  "TOKEN_EXPIRED",
                  "AI_AGENT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_FOUND",
                  "SNS_ACCOUNT_NOT_ACTIVE",
                  "TIKTOK_ACCOUNT_NOT_LINKED",
                  "TIKTOK_TOKEN_REFRESH_FAILED",
                  "TIKTOK_VIDEO_INIT_FAILED",
                  "TIKTOK_VIDEO_UPLOAD_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_FAILED",
                  "TIKTOK_VIDEO_STATUS_CHECK_FAILED",
                  "TIKTOK_VIDEO_PUBLISH_TIMEOUT",
                  "TIKTOK_CREATOR_INFO_FAILED",
                  "TIKTOK_UPLOAD_URL_EXPIRED",
                  "TIKTOK_CHUNK_UPLOAD_FAILED"
                ],
                "description": "エラーコード",
                "example": "UNKNOWN_ERROR"
              },
              "message": { "type": "string", "description": "エラーの説明メッセージ" },
              "requestId": {
                "type": "string",
                "description": "リクエストID",
                "example": "req_1234"
              },
              "statusCode": {
                "type": "integer",
                "description": "HTTPステータスコード",
                "example": 500
              }
            },
            "required": ["code", "message", "requestId", "statusCode"]
          }
        },
        "required": ["error"]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "Supabase AuthのユーザーID"
          },
          "email": { "type": "string", "format": "email", "description": "メールアドレス" },
          "nickname": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "ニックネーム"
          },
          "language": { "type": "string", "maxLength": 10, "description": "言語設定 (ja, en など)" }
        },
        "required": ["userId", "email", "nickname"]
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "プロフィールID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "ユーザーID",
            "example": "123e4567-e89b-12d3-a456-426614174001"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "メールアドレス",
            "example": "user@example.com"
          },
          "nickname": { "type": "string", "description": "ニックネーム", "example": "たろう" },
          "remainedCredits": {
            "type": "integer",
            "description": "残りクレジット数",
            "example": 100
          },
          "language": { "type": "string", "description": "言語設定", "example": "ja" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "作成日時",
            "example": "2024-01-01T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "更新日時",
            "example": "2024-01-01T00:00:00Z"
          }
        },
        "required": [
          "id",
          "userId",
          "email",
          "nickname",
          "remainedCredits",
          "language",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "ニックネーム",
            "example": "たろう"
          },
          "language": {
            "type": "string",
            "enum": ["ja", "en"],
            "description": "言語設定",
            "example": "ja"
          }
        }
      },
      "DeleteAccountRequest": {
        "type": "object",
        "properties": {
          "confirmation": {
            "type": "string",
            "enum": ["DELETE_MY_ACCOUNT"],
            "description": "削除確認文字列（DELETE_MY_ACCOUNTと入力）",
            "example": "DELETE_MY_ACCOUNT"
          }
        },
        "required": ["confirmation"]
      },
      "SyncTikTokVideoStatsResponse": {
        "type": "object",
        "properties": {
          "syncedCount": { "type": "number", "description": "同期成功数" },
          "failedCount": { "type": "number", "description": "同期失敗数" },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "postId": { "type": "string", "description": "投稿ID" },
                "success": { "type": "boolean", "description": "同期成功フラグ" },
                "stats": {
                  "type": "object",
                  "properties": {
                    "likes": { "type": "number", "description": "いいね数" },
                    "comments": { "type": "number", "description": "コメント数" },
                    "shares": { "type": "number", "description": "シェア数" },
                    "views": { "type": "number", "description": "再生数" }
                  },
                  "required": ["likes", "comments", "shares", "views"],
                  "description": "統計情報"
                },
                "error": { "type": "string", "description": "エラーメッセージ" }
              },
              "required": ["postId", "success"]
            }
          }
        },
        "required": ["syncedCount", "failedCount", "results"]
      },
      "SyncTikTokVideoStatsRequest": {
        "type": "object",
        "properties": {
          "projectId": { "type": "string", "format": "uuid", "description": "プロジェクトID" },
          "postIds": {
            "type": "array",
            "items": { "type": "string", "format": "uuid" },
            "description": "同期対象の投稿ID（指定しない場合は全投稿）"
          }
        },
        "required": ["projectId"]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/api/v1/users": {
      "post": {
        "tags": ["users"],
        "summary": "ユーザープロフィールを作成",
        "description": "新規ユーザーのプロフィールを作成します",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateUserRequest" } }
          }
        },
        "responses": {
          "201": {
            "description": "ユーザープロフィール作成成功",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateUserResponse" }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "自分のプロフィール取得",
        "description": "認証済みユーザーの自分のプロフィール情報を取得します",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "プロフィール取得成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": { "$ref": "#/components/schemas/UserProfile" },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "timestamp": { "type": "string", "format": "date-time" },
                        "version": { "type": "string" }
                      },
                      "required": ["timestamp", "version"]
                    }
                  },
                  "required": ["success", "data", "metadata"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "プロフィール更新",
        "description": "認証済みユーザーの自分のプロフィール情報を更新します",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProfileRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "プロフィール更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": { "$ref": "#/components/schemas/UserProfile" },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "timestamp": { "type": "string", "format": "date-time" },
                        "version": { "type": "string" }
                      },
                      "required": ["timestamp", "version"]
                    }
                  },
                  "required": ["success", "data", "metadata"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "アカウント削除",
        "description": "認証済みユーザーのアカウントを論理削除します。この操作は取り消せません。",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteAccountRequest" }
            }
          }
        },
        "responses": {
          "204": { "description": "アカウント削除成功" },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects": {
      "get": {
        "tags": ["Projects"],
        "summary": "ユーザーのプロジェクト一覧を取得",
        "description": "認証されたユーザーが所有するプロジェクトの一覧を取得します",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "プロジェクト一覧の取得に成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "format": "uuid" },
                          "name": { "type": "string" },
                          "description": { "type": "string", "nullable": true },
                          "ownerId": { "type": "string", "format": "uuid" },
                          "status": { "type": "string" },
                          "isSetupComplete": { "type": "boolean" },
                          "notifications": {
                            "type": "object",
                            "properties": {
                              "contentGenerationComplete": { "type": "boolean" },
                              "contentGenerationError": { "type": "boolean" },
                              "postError": { "type": "boolean" },
                              "postComplete": { "type": "boolean" }
                            },
                            "required": [
                              "contentGenerationComplete",
                              "contentGenerationError",
                              "postError",
                              "postComplete"
                            ]
                          },
                          "aiAgentCount": { "type": "number" },
                          "createdAt": { "type": "string", "format": "date-time" },
                          "updatedAt": { "type": "string", "format": "date-time" }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "ownerId",
                          "status",
                          "isSetupComplete",
                          "notifications",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "total": { "type": "number" }
                  },
                  "required": ["projects", "total"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "新しいプロジェクトを作成",
        "description": "認証されたユーザーの新しいプロジェクトを作成します",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "minLength": 1, "maxLength": 255 },
                  "description": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "プロジェクトの作成に成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "uuid" },
                    "name": { "type": "string" },
                    "description": { "type": "string", "nullable": true },
                    "ownerId": { "type": "string", "format": "uuid" },
                    "status": { "type": "string" },
                    "isSetupComplete": { "type": "boolean" },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "contentGenerationComplete": { "type": "boolean" },
                        "contentGenerationError": { "type": "boolean" },
                        "postError": { "type": "boolean" },
                        "postComplete": { "type": "boolean" }
                      },
                      "required": [
                        "contentGenerationComplete",
                        "contentGenerationError",
                        "postError",
                        "postComplete"
                      ]
                    },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "updatedAt": { "type": "string", "format": "date-time" }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "ownerId",
                    "status",
                    "isSetupComplete",
                    "notifications",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}": {
      "get": {
        "tags": ["Projects"],
        "summary": "プロジェクト詳細を取得",
        "description": "指定されたプロジェクトの詳細情報を取得します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "プロジェクト詳細の取得に成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "project": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "uuid" },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "ownerId": { "type": "string", "format": "uuid" },
                        "status": { "type": "string" },
                        "isSetupComplete": { "type": "boolean" },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "contentGenerationComplete": { "type": "boolean" },
                            "contentGenerationError": { "type": "boolean" },
                            "postError": { "type": "boolean" },
                            "postComplete": { "type": "boolean" }
                          },
                          "required": [
                            "contentGenerationComplete",
                            "contentGenerationError",
                            "postError",
                            "postComplete"
                          ]
                        },
                        "createdAt": { "type": "string", "format": "date-time" },
                        "updatedAt": { "type": "string", "format": "date-time" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "ownerId",
                        "status",
                        "isSetupComplete",
                        "notifications",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["project"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      },
      "patch": {
        "tags": ["Projects"],
        "summary": "プロジェクト情報を更新",
        "description": "指定されたプロジェクトの情報を更新します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "notifications": {
                    "type": "object",
                    "properties": {
                      "contentGenerationComplete": { "type": "boolean" },
                      "contentGenerationError": { "type": "boolean" },
                      "postError": { "type": "boolean" },
                      "postComplete": { "type": "boolean" }
                    },
                    "required": [
                      "contentGenerationComplete",
                      "contentGenerationError",
                      "postError",
                      "postComplete"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "プロジェクトの更新に成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "project": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "uuid" },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "ownerId": { "type": "string", "format": "uuid" },
                        "status": { "type": "string" },
                        "isSetupComplete": { "type": "boolean" },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "contentGenerationComplete": { "type": "boolean" },
                            "contentGenerationError": { "type": "boolean" },
                            "postError": { "type": "boolean" },
                            "postComplete": { "type": "boolean" }
                          },
                          "required": [
                            "contentGenerationComplete",
                            "contentGenerationError",
                            "postError",
                            "postComplete"
                          ]
                        },
                        "createdAt": { "type": "string", "format": "date-time" },
                        "updatedAt": { "type": "string", "format": "date-time" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "ownerId",
                        "status",
                        "isSetupComplete",
                        "notifications",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["project"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/setup-status": {
      "patch": {
        "tags": ["Projects"],
        "summary": "プロジェクトのセットアップ状態を更新",
        "description": "指定されたプロジェクトのセットアップ完了状態を更新します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "isSetupComplete": { "type": "boolean" } },
                "required": ["isSetupComplete"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "セットアップ状態更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "uuid" },
                    "name": { "type": "string" },
                    "description": { "type": "string", "nullable": true },
                    "ownerId": { "type": "string", "format": "uuid" },
                    "status": { "type": "string", "enum": ["active", "archived", "deleted"] },
                    "isSetupComplete": { "type": "boolean" },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "updatedAt": { "type": "string", "format": "date-time" }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "ownerId",
                    "status",
                    "isSetupComplete",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/projects/{projectId}": {
      "delete": {
        "tags": ["Projects"],
        "summary": "Delete a project",
        "description": "Delete a project and all its associated data. This action cannot be undone.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the project to delete",
              "example": "550e8400-e29b-41d4-a716-446655440000"
            },
            "required": true,
            "description": "The unique identifier of the project to delete",
            "name": "projectId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the deletion was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result"
                    }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/contents/workflow/generate": {
      "post": {
        "tags": ["Contents"],
        "summary": "コンテンツ生成ワークフロー",
        "description": "ポリシー生成からビデオ作成まで一連の処理を実行します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "overview": { "type": "string", "minLength": 1, "maxLength": 1000 },
                  "options": {
                    "type": "object",
                    "properties": {
                      "videoDuration": {
                        "type": "integer",
                        "minimum": 5,
                        "maximum": 60,
                        "default": 15
                      },
                      "visualStyle": { "type": "string" },
                      "imageStyle": {
                        "type": "string",
                        "enum": ["realistic", "anime", "cartoon", "abstract"],
                        "default": "realistic"
                      },
                      "aspectRatio": {
                        "type": "string",
                        "enum": ["16:9", "9:16", "1:1", "4:3", "3:4"],
                        "default": "9:16"
                      },
                      "language": { "type": "string", "default": "ja" },
                      "speed": { "type": "number", "minimum": 0.5, "maximum": 2 },
                      "postContent": { "type": "string" },
                      "tone": { "type": "string" },
                      "policyCount": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "default": 3
                      },
                      "isSchedulerGenerated": { "type": "boolean" },
                      "scheduledAt": { "type": "string", "format": "date-time" }
                    }
                  }
                },
                "required": ["overview"]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "ワークフローを開始しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflowId": { "type": "string", "format": "uuid" },
                    "status": { "type": "string", "enum": ["processing", "completed", "failed"] },
                    "completedSteps": { "type": "array", "items": { "type": "string" } },
                    "currentStep": { "type": "string", "nullable": true },
                    "results": {
                      "type": "object",
                      "properties": {
                        "policies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string", "format": "uuid" },
                              "content": { "type": "string" },
                              "metadata": { "nullable": true }
                            },
                            "required": ["id", "content"]
                          }
                        },
                        "agents": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string", "format": "uuid" },
                              "content": { "type": "string" },
                              "metadata": { "nullable": true }
                            },
                            "required": ["id", "content"]
                          }
                        },
                        "scenarios": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "policyId": { "type": "string", "format": "uuid" },
                              "agentId": { "type": "string", "format": "uuid" },
                              "postId": { "type": "string", "format": "uuid" },
                              "formatId": { "type": "string" },
                              "topicId": { "type": "string" },
                              "totalDuration": { "type": "number" }
                            },
                            "required": ["scenarioId", "postId", "totalDuration"]
                          }
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "imageSetId": { "type": "string", "format": "uuid" },
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "totalImages": { "type": "number" }
                            },
                            "required": ["imageSetId", "scenarioId", "totalImages"]
                          }
                        },
                        "audios": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "audioId": { "type": "string", "format": "uuid" },
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "audioUrl": { "type": "string", "format": "uri" },
                              "duration": { "type": "number" }
                            },
                            "required": ["audioId", "scenarioId", "audioUrl", "duration"]
                          }
                        },
                        "music": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "musicId": { "type": "string", "format": "uuid" },
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "musicUrl": { "type": "string", "format": "uri" },
                              "duration": { "type": "number" }
                            },
                            "required": ["musicId", "scenarioId", "musicUrl", "duration"]
                          }
                        },
                        "videos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "videoId": { "type": "string", "format": "uuid" },
                              "policyId": { "type": "string", "format": "uuid" },
                              "agentId": { "type": "string", "format": "uuid" },
                              "postId": { "type": "string", "format": "uuid" },
                              "videoUrl": { "type": "string", "format": "uri" },
                              "thumbnailUrl": { "type": "string", "format": "uri" }
                            },
                            "required": ["videoId", "videoUrl", "thumbnailUrl"]
                          }
                        },
                        "posts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "postId": { "type": "string", "format": "uuid" },
                              "policyId": { "type": "string", "format": "uuid" },
                              "agentId": { "type": "string", "format": "uuid" },
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "status": { "type": "string" },
                              "content": { "type": "string" },
                              "formatId": { "type": "string" },
                              "topicId": { "type": "string" }
                            },
                            "required": ["postId", "status"]
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "step": { "type": "string" },
                          "message": { "type": "string" }
                        },
                        "required": ["step", "message"]
                      }
                    },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "completedAt": { "type": "string", "nullable": true, "format": "date-time" }
                  },
                  "required": [
                    "workflowId",
                    "status",
                    "completedSteps",
                    "currentStep",
                    "results",
                    "createdAt",
                    "completedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/contents/workflow/from-agent": {
      "post": {
        "security": [{ "Bearer": [] }],
        "tags": ["Contents"],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agentIds": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" },
                    "minItems": 1
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "videoDuration": {
                        "type": "integer",
                        "minimum": 5,
                        "maximum": 60,
                        "default": 15
                      },
                      "visualStyle": { "type": "string" },
                      "imageStyle": {
                        "type": "string",
                        "enum": ["realistic", "anime", "cartoon", "abstract"],
                        "default": "realistic"
                      },
                      "aspectRatio": {
                        "type": "string",
                        "enum": ["16:9", "9:16", "1:1", "4:3", "3:4"],
                        "default": "9:16"
                      },
                      "language": { "type": "string", "default": "ja" },
                      "speed": { "type": "number", "minimum": 0.5, "maximum": 2 },
                      "postContent": { "type": "string" },
                      "isSchedulerGenerated": { "type": "boolean" },
                      "scheduledAt": { "type": "string", "format": "date-time" }
                    }
                  }
                },
                "required": ["agentIds"]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "コンテンツ生成ワークフローの実行結果",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflowId": { "type": "string", "format": "uuid" },
                    "status": { "type": "string", "enum": ["processing", "completed", "failed"] },
                    "completedSteps": { "type": "array", "items": { "type": "string" } },
                    "currentStep": { "type": "string", "nullable": true },
                    "results": {
                      "type": "object",
                      "properties": {
                        "agents": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string", "format": "uuid" },
                              "content": { "type": "string" },
                              "metadata": { "nullable": true }
                            },
                            "required": ["id", "content"]
                          }
                        },
                        "scenarios": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "policyId": { "type": "string", "format": "uuid" },
                              "agentId": { "type": "string", "format": "uuid" },
                              "postId": { "type": "string", "format": "uuid" },
                              "formatId": { "type": "string" },
                              "topicId": { "type": "string" },
                              "totalDuration": { "type": "number" }
                            },
                            "required": ["scenarioId", "postId", "totalDuration"]
                          }
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "imageSetId": { "type": "string", "format": "uuid" },
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "totalImages": { "type": "number" }
                            },
                            "required": ["imageSetId", "scenarioId", "totalImages"]
                          }
                        },
                        "audios": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "audioId": { "type": "string", "format": "uuid" },
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "audioUrl": { "type": "string", "format": "uri" },
                              "duration": { "type": "number" }
                            },
                            "required": ["audioId", "scenarioId", "audioUrl", "duration"]
                          }
                        },
                        "music": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "musicId": { "type": "string", "format": "uuid" },
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "musicUrl": { "type": "string", "format": "uri" },
                              "duration": { "type": "number" }
                            },
                            "required": ["musicId", "scenarioId", "musicUrl", "duration"]
                          }
                        },
                        "videos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "videoId": { "type": "string", "format": "uuid" },
                              "policyId": { "type": "string", "format": "uuid" },
                              "agentId": { "type": "string", "format": "uuid" },
                              "postId": { "type": "string", "format": "uuid" },
                              "videoUrl": { "type": "string", "format": "uri" },
                              "thumbnailUrl": { "type": "string", "format": "uri" }
                            },
                            "required": ["videoId", "videoUrl", "thumbnailUrl"]
                          }
                        },
                        "posts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "postId": { "type": "string", "format": "uuid" },
                              "policyId": { "type": "string", "format": "uuid" },
                              "agentId": { "type": "string", "format": "uuid" },
                              "scenarioId": { "type": "string", "format": "uuid" },
                              "status": { "type": "string" },
                              "content": { "type": "string" },
                              "formatId": { "type": "string" },
                              "topicId": { "type": "string" }
                            },
                            "required": ["postId", "status"]
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "step": { "type": "string" },
                          "message": { "type": "string" }
                        },
                        "required": ["step", "message"]
                      }
                    },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "completedAt": { "type": "string", "nullable": true, "format": "date-time" }
                  },
                  "required": [
                    "workflowId",
                    "status",
                    "completedSteps",
                    "currentStep",
                    "results",
                    "createdAt",
                    "completedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/policies/{policyId}/scenes/generate": {
      "post": {
        "tags": ["Contents"],
        "summary": "シーンを生成",
        "description": "ポリシーに基づいて動画用のシーン構成を生成します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "policyId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "policyId": { "type": "string", "format": "uuid" },
                  "policyName": { "type": "string" },
                  "policyOverview": { "type": "string" },
                  "duration": { "type": "integer", "minimum": 5, "maximum": 60, "default": 15 },
                  "style": {
                    "type": "object",
                    "properties": {
                      "visualStyle": { "type": "string" },
                      "tone": { "type": "string" }
                    }
                  },
                  "postId": { "type": "string", "format": "uuid" }
                },
                "required": ["policyId", "policyName", "policyOverview", "postId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "シーンの生成に成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "postId": { "type": "string", "format": "uuid" },
                    "policyId": { "type": "string", "format": "uuid" },
                    "scenes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sceneNumber": { "type": "number", "description": "シーン番号" },
                          "duration": { "type": "number", "description": "シーンの秒数" },
                          "visuals": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "string", "description": "ビジュアルのID" },
                                "url": { "type": "string", "description": "メディアのURL" },
                                "description": {
                                  "type": "string",
                                  "description": "画像の説明（AI生成用）"
                                },
                                "order": { "type": "number", "description": "表示順序" },
                                "type": {
                                  "type": "string",
                                  "enum": ["image", "video"],
                                  "default": "image",
                                  "description": "メディアタイプ"
                                },
                                "duration": { "type": "number", "description": "表示時間（秒）" }
                              },
                              "required": ["id", "description", "order"]
                            },
                            "description": "ビジュアル要素の配列"
                          },
                          "subtitles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "string", "description": "字幕のID" },
                                "text": { "type": "string", "description": "字幕テキスト" },
                                "position": {
                                  "type": "object",
                                  "properties": {
                                    "x": { "type": "number", "description": "X座標（%）" },
                                    "y": { "type": "number", "description": "Y座標（%）" },
                                    "align": {
                                      "type": "string",
                                      "enum": ["left", "center", "right"],
                                      "default": "center",
                                      "description": "配置"
                                    }
                                  },
                                  "required": ["x", "y"],
                                  "description": "表示位置"
                                },
                                "style": {
                                  "type": "object",
                                  "properties": {
                                    "fontSize": { "type": "number" },
                                    "fontWeight": { "type": "string" },
                                    "color": { "type": "string" },
                                    "backgroundColor": { "type": "string" },
                                    "fontFamily": { "type": "string" },
                                    "textShadow": { "type": "string" },
                                    "padding": { "type": "string" },
                                    "borderRadius": { "type": "string" }
                                  },
                                  "description": "スタイル設定"
                                },
                                "animation": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": ["fadeIn", "slideIn", "bounce", "typewriter"]
                                    },
                                    "duration": { "type": "number" },
                                    "delay": { "type": "number" },
                                    "direction": { "type": "string" }
                                  },
                                  "description": "アニメーション設定"
                                },
                                "timing": {
                                  "type": "object",
                                  "properties": {
                                    "startTime": {
                                      "type": "number",
                                      "description": "開始時間（秒）"
                                    },
                                    "endTime": { "type": "number", "description": "終了時間（秒）" }
                                  },
                                  "required": ["startTime", "endTime"],
                                  "description": "タイミング設定"
                                }
                              },
                              "required": ["id", "text", "position", "timing"]
                            },
                            "description": "字幕要素の配列"
                          },
                          "audios": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "string", "description": "音声のID" },
                                "url": { "type": "string", "description": "音声のURL" },
                                "type": {
                                  "type": "string",
                                  "enum": ["narration", "bgm", "effect"],
                                  "description": "音声タイプ"
                                },
                                "text": {
                                  "type": "string",
                                  "description": "ナレーションテキスト（type=narrationの場合）"
                                },
                                "startTime": { "type": "number", "description": "開始時間（秒）" },
                                "endTime": { "type": "number", "description": "終了時間（秒）" }
                              },
                              "required": ["id", "type", "startTime"]
                            },
                            "description": "音声要素の配列（ナレーションを含む）"
                          },
                          "transition": {
                            "type": "string",
                            "description": "次のシーンへの遷移エフェクト"
                          }
                        },
                        "required": ["sceneNumber", "duration", "visuals", "subtitles", "audios"]
                      }
                    },
                    "totalDuration": { "type": "number" },
                    "postText": { "type": "string", "description": "SNS投稿用のテキスト" },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "title": { "type": "string" },
                        "description": { "type": "string" },
                        "tags": { "type": "array", "items": { "type": "string" } }
                      },
                      "required": ["title", "description"]
                    },
                    "createdAt": { "type": "string", "format": "date-time" }
                  },
                  "required": [
                    "postId",
                    "policyId",
                    "scenes",
                    "totalDuration",
                    "postText",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/policies/{policyId}/images/generate": {
      "post": {
        "tags": ["Contents"],
        "summary": "画像を生成",
        "description": "シナリオに基づいて各シーンの画像を生成します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "policyId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenarioId": { "type": "string", "format": "uuid" },
                  "postId": { "type": "string", "format": "uuid" },
                  "scenes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "sceneNumber": { "type": "number" },
                        "visualDescription": { "type": "string" },
                        "visuals": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "description": { "type": "string" },
                              "order": { "type": "number" }
                            },
                            "required": ["id", "description", "order"]
                          }
                        },
                        "duration": { "type": "number" }
                      },
                      "required": ["sceneNumber", "visuals", "duration"]
                    }
                  },
                  "imageStyle": {
                    "type": "object",
                    "properties": {
                      "style": {
                        "type": "string",
                        "enum": ["realistic", "anime", "cartoon", "abstract"],
                        "default": "realistic"
                      },
                      "colorScheme": { "type": "string" },
                      "aspectRatio": {
                        "type": "string",
                        "enum": ["16:9", "9:16", "1:1", "4:3", "3:4"],
                        "default": "9:16"
                      }
                    }
                  }
                },
                "required": ["scenarioId", "scenes"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "画像の生成に成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "imageSetId": { "type": "string", "format": "uuid" },
                    "scenarioId": { "type": "string", "format": "uuid" },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "imageId": { "type": "string", "format": "uuid" },
                          "sceneNumber": { "type": "number" },
                          "visualId": { "type": "string" },
                          "order": { "type": "number" },
                          "imageUrl": { "type": "string", "format": "uri" },
                          "thumbnailUrl": { "type": "string", "format": "uri" },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "width": { "type": "number" },
                              "height": { "type": "number" },
                              "format": { "type": "string" },
                              "prompt": { "type": "string" },
                              "storagePath": { "type": "string" }
                            },
                            "required": ["width", "height", "format"]
                          }
                        },
                        "required": [
                          "imageId",
                          "sceneNumber",
                          "imageUrl",
                          "thumbnailUrl",
                          "metadata"
                        ]
                      }
                    },
                    "totalImages": { "type": "number" },
                    "createdAt": { "type": "string", "format": "date-time" }
                  },
                  "required": ["imageSetId", "scenarioId", "images", "totalImages", "createdAt"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/policies/{policyId}/video/create": {
      "post": {
        "tags": ["Contents"],
        "summary": "動画を作成",
        "description": "画像とシナリオから動画を生成します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "policyId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": { "type": "string", "format": "uuid" },
                  "scenarioId": { "type": "string", "format": "uuid" },
                  "imageSetId": { "type": "string", "format": "uuid" },
                  "formatId": { "type": "string" },
                  "scenes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "sceneNumber": { "type": "number" },
                        "imageId": { "type": "string", "format": "uuid" },
                        "imageUrl": { "type": "string", "format": "uri" },
                        "duration": { "type": "number" },
                        "text": { "type": "string" },
                        "narration": { "type": "string" },
                        "transition": { "type": "string" },
                        "subtitles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "text": { "type": "string" },
                              "position": {
                                "type": "object",
                                "properties": {
                                  "x": { "type": "number" },
                                  "y": { "type": "number" },
                                  "align": { "type": "string", "enum": ["left", "center", "right"] }
                                }
                              },
                              "timing": {
                                "type": "object",
                                "properties": {
                                  "startTime": { "type": "number" },
                                  "endTime": { "type": "number" }
                                },
                                "required": ["startTime", "endTime"]
                              },
                              "style": {
                                "type": "object",
                                "properties": {
                                  "fontSize": { "type": "number" },
                                  "fontColor": { "type": "string" },
                                  "backgroundColor": { "type": "string" },
                                  "fontWeight": { "type": "string" }
                                }
                              }
                            },
                            "required": ["id", "text"]
                          }
                        },
                        "visuals": { "nullable": true },
                        "audios": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "type": { "type": "string", "enum": ["narration", "bgm", "effect"] },
                              "text": { "type": "string" },
                              "startTime": { "type": "number" },
                              "endTime": { "type": "number" }
                            },
                            "required": ["id", "type", "startTime"]
                          }
                        }
                      },
                      "required": ["sceneNumber", "imageId", "duration", "text"]
                    }
                  },
                  "audioUrl": { "type": "string", "format": "uri" },
                  "musicUrl": { "type": "string", "format": "uri" },
                  "sceneAudios": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "sceneNumber": { "type": "number" },
                        "audioUrl": { "type": "string", "format": "uri" },
                        "duration": { "type": "number" }
                      },
                      "required": ["sceneNumber", "audioUrl", "duration"]
                    }
                  },
                  "audioSettings": {
                    "type": "object",
                    "properties": {
                      "voiceType": {
                        "type": "string",
                        "enum": ["male", "female", "neutral"],
                        "default": "neutral"
                      },
                      "backgroundMusic": { "type": "boolean", "default": true },
                      "volume": { "type": "number", "minimum": 0, "maximum": 100, "default": 80 },
                      "musicVolume": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 30
                      }
                    }
                  },
                  "backgroundVideoUrl": { "type": "string", "format": "uri" }
                },
                "required": ["scenarioId", "imageSetId", "scenes"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "動画の作成を開始",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "videoId": { "type": "string", "format": "uuid" },
                    "policyId": { "type": "string", "format": "uuid" },
                    "videoUrl": { "type": "string", "format": "uri" },
                    "thumbnailUrl": { "type": "string", "format": "uri" },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "duration": { "type": "number" },
                        "width": { "type": "number" },
                        "height": { "type": "number" },
                        "format": { "type": "string" },
                        "fileSize": { "type": "number" }
                      },
                      "required": ["duration", "width", "height", "format", "fileSize"]
                    },
                    "status": { "type": "string", "enum": ["processing", "completed", "failed"] },
                    "createdAt": { "type": "string", "format": "date-time" }
                  },
                  "required": [
                    "videoId",
                    "policyId",
                    "videoUrl",
                    "thumbnailUrl",
                    "metadata",
                    "status",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/contents/generate-audio": {
      "post": {
        "tags": ["Contents"],
        "summary": "テキストから音声を生成",
        "description": "指定されたテキストから音声ファイルを生成します",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectId": { "type": "string" },
                  "policyId": { "type": "string" },
                  "postId": { "type": "string" },
                  "text": { "type": "string", "minLength": 1, "maxLength": 5000 },
                  "voice": { "type": "string", "default": "default" },
                  "speed": { "type": "number", "minimum": 0.5, "maximum": 2, "default": 1.4 },
                  "pitch": { "type": "number", "minimum": -10, "maximum": 10, "default": 0 },
                  "language": { "type": "string", "default": "ja" },
                  "format": { "type": "string", "enum": ["mp3", "wav", "flac"], "default": "mp3" }
                },
                "required": ["projectId", "policyId", "postId", "text"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "音声生成が成功しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "audioId": { "type": "string", "format": "uuid" },
                    "audioUrl": { "type": "string", "format": "uri" },
                    "duration": { "type": "number" },
                    "format": { "type": "string" },
                    "fileSize": { "type": "number" },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "voice": { "type": "string" },
                        "speed": { "type": "number" },
                        "language": { "type": "string" },
                        "text": { "type": "string" },
                        "storagePath": { "type": "string" }
                      },
                      "required": ["voice", "speed", "language", "text"]
                    },
                    "createdAt": { "type": "string", "format": "date-time" }
                  },
                  "required": [
                    "audioId",
                    "audioUrl",
                    "duration",
                    "format",
                    "fileSize",
                    "metadata",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/contents/generate-music": {
      "post": {
        "tags": ["Contents"],
        "summary": "プロンプトから音楽を生成",
        "description": "指定されたプロンプトから音楽ファイルを生成します",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectId": { "type": "string", "format": "uuid" },
                  "prompt": { "type": "string", "minLength": 1, "maxLength": 500 },
                  "duration": { "type": "number", "minimum": 5, "maximum": 180, "default": 30 },
                  "genre": { "type": "string" },
                  "mood": { "type": "string" },
                  "tempo": {
                    "type": "string",
                    "enum": ["slow", "medium", "fast"],
                    "default": "medium"
                  },
                  "instruments": { "type": "array", "items": { "type": "string" } }
                },
                "required": ["projectId", "prompt"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "音楽生成が成功しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "musicId": { "type": "string", "format": "uuid" },
                    "musicUrl": { "type": "string", "format": "uri" },
                    "duration": { "type": "number" },
                    "format": { "type": "string", "default": "mp3" },
                    "fileSize": { "type": "number" },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "prompt": { "type": "string" },
                        "originalPrompt": { "type": "string" },
                        "genre": { "type": "string" },
                        "mood": { "type": "string" },
                        "tempo": { "type": "string" },
                        "instruments": { "type": "array", "items": { "type": "string" } },
                        "generatedAt": { "type": "string", "format": "date-time" }
                      },
                      "required": ["prompt", "originalPrompt", "tempo", "generatedAt"]
                    },
                    "createdAt": { "type": "string", "format": "date-time" }
                  },
                  "required": [
                    "musicId",
                    "musicUrl",
                    "duration",
                    "fileSize",
                    "metadata",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/ai-agents/generate": {
      "post": {
        "tags": ["AiAgents"],
        "summary": "AIエージェントを自動生成",
        "description": "プロジェクトの概要からAIを使用して複数のAIエージェントを自動生成します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid", "description": "プロジェクトID" },
            "required": true,
            "description": "プロジェクトID",
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "overview": {
                    "type": "string",
                    "minLength": 1,
                    "description": "生成するAIエージェントの概要"
                  },
                  "count": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 5,
                    "default": 1,
                    "description": "生成するAIエージェント数"
                  },
                  "language": { "type": "string", "description": "言語設定" },
                  "options": {
                    "type": "object",
                    "properties": {
                      "tone": { "type": "string", "description": "トーン設定" },
                      "platform": { "type": "string", "description": "プラットフォーム" }
                    },
                    "description": "追加オプション"
                  }
                },
                "required": ["overview"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "AIエージェント生成成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "description": "生成されたAIエージェントID" },
                          "content": { "type": "string", "description": "AIエージェントの内容" },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string", "description": "エージェント名" },
                              "overview": { "type": "string", "description": "概要" },
                              "cautions": { "type": "string", "description": "注意事項" },
                              "tone": { "type": "string", "description": "トーン設定" },
                              "platform": { "type": "string", "description": "プラットフォーム" }
                            },
                            "required": ["name", "overview"],
                            "description": "メタデータ"
                          },
                          "createdAt": { "type": "string", "description": "作成日時" }
                        },
                        "required": ["id", "content", "createdAt"]
                      }
                    },
                    "totalGenerated": {
                      "type": "number",
                      "description": "生成されたAIエージェント総数"
                    }
                  },
                  "required": ["agents", "totalGenerated"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/ai-agents": {
      "get": {
        "tags": ["AiAgents"],
        "summary": "AIエージェント一覧取得",
        "description": "指定されたプロジェクトのAIエージェント一覧を取得します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          { "schema": { "type": "string" }, "required": false, "name": "isActive", "in": "query" }
        ],
        "responses": {
          "200": {
            "description": "AIエージェント一覧",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "format": "uuid" },
                          "projectId": { "type": "string", "format": "uuid" },
                          "name": { "type": "string" },
                          "direction": { "type": "string" },
                          "overview": { "type": "string", "nullable": true },
                          "imageUrl": { "type": "string", "nullable": true },
                          "avatarSeed": { "type": "string", "nullable": true },
                          "avatarStyle": { "type": "string", "nullable": true },
                          "avatarBgColor": { "type": "string", "nullable": true },
                          "videoAvatarImageUrl": { "type": "string", "nullable": true },
                          "format": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "string", "format": "uuid" },
                                "frequency": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "exclusiveMinimum": true
                                },
                                "topic": { "type": "string", "description": "コンテンツのトピック" }
                              },
                              "required": ["id", "frequency"]
                            }
                          },
                          "isAutoPostActive": { "type": "boolean" },
                          "frequency": { "type": "string", "nullable": true },
                          "frequencyConfig": {
                            "type": "object",
                            "nullable": true,
                            "additionalProperties": { "nullable": true }
                          },
                          "postTimes": {
                            "type": "array",
                            "nullable": true,
                            "items": { "type": "string" }
                          },
                          "timeZone": { "type": "string", "nullable": true },
                          "targetSnsAccounts": {
                            "type": "object",
                            "additionalProperties": { "nullable": true }
                          },
                          "cautions": { "type": "string", "nullable": true },
                          "isAutoGenerateActive": { "type": "boolean" },
                          "contentGenerationScheduleType": {
                            "type": "string",
                            "nullable": true,
                            "enum": ["DAILY", "WEEKLY", "MONTHLY"]
                          },
                          "contentGenerationTime": { "type": "string", "nullable": true },
                          "contentGenerationDayOfWeek": {
                            "type": "integer",
                            "nullable": true,
                            "minimum": 0,
                            "maximum": 6
                          },
                          "contentGenerationDayOfMonth": {
                            "type": "integer",
                            "nullable": true,
                            "minimum": 1,
                            "maximum": 31
                          },
                          "contentGenerationTimeZone": { "type": "string", "nullable": true },
                          "postDelayDays": { "type": "integer", "minimum": 0, "maximum": 365 },
                          "createdAt": { "type": "string", "format": "date-time" },
                          "updatedAt": { "type": "string", "format": "date-time" }
                        },
                        "required": [
                          "id",
                          "projectId",
                          "name",
                          "direction",
                          "overview",
                          "imageUrl",
                          "avatarSeed",
                          "avatarStyle",
                          "avatarBgColor",
                          "videoAvatarImageUrl",
                          "format",
                          "isAutoPostActive",
                          "frequency",
                          "frequencyConfig",
                          "postTimes",
                          "timeZone",
                          "targetSnsAccounts",
                          "cautions",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "total": { "type": "number" },
                    "formats": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "format": "uuid" },
                          "name": { "type": "string" },
                          "description": { "type": "string", "nullable": true },
                          "imageUrl": { "type": "string", "nullable": true },
                          "createdAt": { "type": "string", "format": "date-time" },
                          "updatedAt": { "type": "string", "format": "date-time" }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "imageUrl",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    }
                  },
                  "required": ["agents", "total", "formats"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      },
      "post": {
        "tags": ["AiAgents"],
        "summary": "AIエージェントを作成",
        "description": "新しいAIエージェントを作成します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "minLength": 1, "maxLength": 255 },
                  "direction": { "type": "string", "minLength": 1, "maxLength": 255 },
                  "overview": { "type": "string", "nullable": true },
                  "imageUrl": { "type": "string", "nullable": true },
                  "format": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "uuid" },
                        "frequency": { "type": "integer", "minimum": 0, "exclusiveMinimum": true },
                        "topic": { "type": "string", "description": "コンテンツのトピック" }
                      },
                      "required": ["id", "frequency"]
                    },
                    "default": []
                  },
                  "isAutoPostActive": { "type": "boolean", "default": false },
                  "frequency": {
                    "type": "string",
                    "nullable": true,
                    "enum": ["DAILY", "WEEKLY", "MONTHLY_DATE", "CUSTOM"]
                  },
                  "frequencyConfig": {
                    "type": "object",
                    "nullable": true,
                    "additionalProperties": { "nullable": true }
                  },
                  "postTimes": { "type": "array", "nullable": true, "items": { "type": "string" } },
                  "targetSnsAccounts": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  },
                  "cautions": { "type": "string", "nullable": true }
                },
                "required": ["name", "direction"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "作成されたAIエージェント",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "uuid" },
                        "projectId": { "type": "string", "format": "uuid" },
                        "name": { "type": "string" },
                        "direction": { "type": "string" },
                        "overview": { "type": "string", "nullable": true },
                        "imageUrl": { "type": "string", "nullable": true },
                        "format": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string", "format": "uuid" },
                              "frequency": {
                                "type": "integer",
                                "minimum": 0,
                                "exclusiveMinimum": true
                              },
                              "topic": { "type": "string", "description": "コンテンツのトピック" }
                            },
                            "required": ["id", "frequency"]
                          }
                        },
                        "isAutoPostActive": { "type": "boolean" },
                        "frequency": { "type": "string", "nullable": true },
                        "frequencyConfig": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "postTimes": {
                          "type": "array",
                          "nullable": true,
                          "items": { "type": "string" }
                        },
                        "targetSnsAccounts": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        },
                        "cautions": { "type": "string", "nullable": true },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "projectId",
                        "name",
                        "direction",
                        "overview",
                        "imageUrl",
                        "format",
                        "isAutoPostActive",
                        "frequency",
                        "frequencyConfig",
                        "postTimes",
                        "targetSnsAccounts",
                        "cautions",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["agent"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/ai-agents/{agentId}": {
      "put": {
        "tags": ["AiAgents"],
        "summary": "AIエージェントを更新",
        "description": "指定されたAIエージェントを更新します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "minLength": 1, "maxLength": 255 },
                  "direction": { "type": "string", "minLength": 1, "maxLength": 255 },
                  "overview": { "type": "string", "nullable": true },
                  "imageUrl": { "type": "string", "nullable": true },
                  "format": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "uuid" },
                        "frequency": { "type": "integer", "minimum": 0, "exclusiveMinimum": true },
                        "topic": { "type": "string", "description": "コンテンツのトピック" }
                      },
                      "required": ["id", "frequency"]
                    },
                    "default": []
                  },
                  "isAutoPostActive": { "type": "boolean" },
                  "frequency": {
                    "type": "string",
                    "nullable": true,
                    "enum": ["DAILY", "WEEKLY", "MONTHLY_DATE", "CUSTOM"]
                  },
                  "frequencyConfig": {
                    "type": "object",
                    "nullable": true,
                    "additionalProperties": { "nullable": true }
                  },
                  "postTimes": { "type": "array", "nullable": true, "items": { "type": "string" } },
                  "timeZone": { "type": "string", "nullable": true },
                  "targetSnsAccounts": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  },
                  "cautions": { "type": "string", "nullable": true },
                  "isAutoGenerateActive": { "type": "boolean" },
                  "contentGenerationScheduleType": {
                    "type": "string",
                    "nullable": true,
                    "enum": ["DAILY", "WEEKLY", "MONTHLY"]
                  },
                  "contentGenerationTime": { "type": "string", "nullable": true },
                  "contentGenerationDayOfWeek": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 0,
                    "maximum": 6
                  },
                  "contentGenerationDaysOfWeek": {
                    "type": "array",
                    "nullable": true,
                    "items": { "type": "integer", "minimum": 0, "maximum": 6 }
                  },
                  "contentGenerationDayOfMonth": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 1,
                    "maximum": 31
                  },
                  "contentGenerationDaysOfMonth": {
                    "type": "array",
                    "nullable": true,
                    "items": { "type": "integer", "minimum": 1, "maximum": 31 }
                  },
                  "contentGenerationTimeZone": { "type": "string", "nullable": true },
                  "postDelayDays": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 0,
                    "maximum": 365
                  }
                },
                "required": ["name", "direction", "isAutoPostActive"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新されたAIエージェント",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "uuid" },
                        "projectId": { "type": "string", "format": "uuid" },
                        "name": { "type": "string" },
                        "direction": { "type": "string" },
                        "overview": { "type": "string", "nullable": true },
                        "imageUrl": { "type": "string", "nullable": true },
                        "format": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string", "format": "uuid" },
                              "frequency": {
                                "type": "integer",
                                "minimum": 0,
                                "exclusiveMinimum": true
                              },
                              "topic": { "type": "string", "description": "コンテンツのトピック" }
                            },
                            "required": ["id", "frequency"]
                          }
                        },
                        "isAutoPostActive": { "type": "boolean" },
                        "frequency": { "type": "string", "nullable": true },
                        "frequencyConfig": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "postTimes": {
                          "type": "array",
                          "nullable": true,
                          "items": { "type": "string" }
                        },
                        "targetSnsAccounts": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        },
                        "cautions": { "type": "string", "nullable": true },
                        "postDelayDays": { "type": "integer", "minimum": 0, "maximum": 365 },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "projectId",
                        "name",
                        "direction",
                        "overview",
                        "imageUrl",
                        "format",
                        "isAutoPostActive",
                        "frequency",
                        "frequencyConfig",
                        "postTimes",
                        "targetSnsAccounts",
                        "cautions",
                        "postDelayDays",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["agent"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["AI Agents"],
        "summary": "AIエージェントを削除",
        "description": "指定されたAIエージェントを削除します",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174001"
            },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "削除成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/ai-agents/{agentId}/sns-accounts/link": {
      "post": {
        "summary": "AIエージェントにSNSアカウントを連携",
        "description": "AIエージェントに既存のSNSアカウントを連携します。連携されたアカウントは自動投稿の対象となります。",
        "tags": ["AI Agents"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "プロジェクトID",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "AIエージェントID",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "snsAccountId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "連携するSNSアカウントのID",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "isActive": {
                    "type": "boolean",
                    "default": true,
                    "description": "連携を有効にするかどうか",
                    "example": true
                  },
                  "priority": {
                    "type": "integer",
                    "default": 0,
                    "description": "優先度（複数アカウントがある場合の投稿優先順位）",
                    "example": 0
                  }
                },
                "required": ["snsAccountId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SNSアカウントの連携に成功しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "処理の成功可否",
                      "example": true
                    },
                    "linkedAccount": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "連携ID",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "agentId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "AIエージェントID",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "snsAccountId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "SNSアカウントID",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "platform": {
                          "type": "string",
                          "description": "SNSプラットフォーム",
                          "example": "twitter"
                        },
                        "isActive": {
                          "type": "boolean",
                          "description": "連携が有効かどうか",
                          "example": true
                        },
                        "priority": { "type": "integer", "description": "優先度", "example": 0 },
                        "createdAt": {
                          "type": "string",
                          "description": "作成日時",
                          "example": "2024-01-01T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "description": "更新日時",
                          "example": "2024-01-01T00:00:00Z"
                        }
                      },
                      "required": [
                        "id",
                        "agentId",
                        "snsAccountId",
                        "platform",
                        "isActive",
                        "priority",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "連携されたアカウント情報"
                    }
                  },
                  "required": ["success", "linkedAccount"],
                  "description": "SNSアカウント連携成功レスポンス"
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/ai-agents/{agentId}/upload-image": {
      "post": {
        "tags": ["AiAgents"],
        "security": [{ "Bearer": [] }],
        "summary": "AIエージェントに画像をアップロード",
        "description": "AIエージェントにBase64形式の画像をアップロードします",
        "parameters": [
          {
            "schema": { "type": "string", "example": "proj_123" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string", "example": "agent_123" },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": { "type": "string", "description": "Base64エンコードされた画像データ" }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "画像のアップロードに成功しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "imageUrl": { "type": "string", "description": "アップロードされた画像のURL" }
                  },
                  "required": ["imageUrl"]
                }
              }
            }
          },
          "400": { "description": "不正なリクエスト" },
          "404": { "description": "AIエージェントが見つかりません" }
        }
      }
    },
    "/api/v1/projects/{projectId}/ai-agents/{agentId}/upload-video-avatar-image": {
      "post": {
        "tags": ["AiAgents"],
        "security": [{ "Bearer": [] }],
        "summary": "動画アバター画像をアップロード",
        "description": "動画生成用のアバター画像をBase64形式でアップロードします",
        "parameters": [
          {
            "schema": { "type": "string", "example": "proj_123" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string", "example": "agent_123" },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": { "type": "string", "description": "Base64エンコードされた画像データ" }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "動画アバター画像のアップロードに成功しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "videoAvatarImageUrl": {
                      "type": "string",
                      "description": "アップロードされた動画アバター画像のURL"
                    }
                  },
                  "required": ["videoAvatarImageUrl"]
                }
              }
            }
          },
          "400": { "description": "不正なリクエスト" },
          "404": { "description": "AIエージェントが見つかりません" }
        }
      }
    },
    "/api/v1/projects/{projectId}/ai-agents/{agentId}/auto-post-settings": {
      "patch": {
        "tags": ["AiAgents"],
        "summary": "自動投稿設定の更新",
        "description": "AIエージェントの自動投稿設定（頻度、時間等）を更新します",
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isAutoPostActive": { "type": "boolean" },
                  "frequency": { "type": "string", "enum": ["daily", "weekly", "monthly"] },
                  "frequencyConfig": {
                    "type": "object",
                    "properties": {
                      "daysOfWeek": {
                        "type": "array",
                        "items": { "type": "number", "minimum": 1, "maximum": 7 }
                      },
                      "daysOfMonth": {
                        "type": "array",
                        "items": { "type": "number", "minimum": 1, "maximum": 31 }
                      }
                    }
                  },
                  "postTime": { "type": "string", "pattern": "^([0-1][0-9]|2[0-3]):[0-5][0-9]$" }
                },
                "required": ["isAutoPostActive", "frequency", "postTime"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "自動投稿設定の更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "agent": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "uuid" },
                        "projectId": { "type": "string", "format": "uuid" },
                        "name": { "type": "string" },
                        "overview": { "type": "string", "nullable": true },
                        "isAutoPostActive": { "type": "boolean" },
                        "frequency": { "type": "string" },
                        "frequencyConfig": { "nullable": true },
                        "postTimes": { "type": "array", "items": { "type": "string" } },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "projectId",
                        "name",
                        "overview",
                        "isAutoPostActive",
                        "frequency",
                        "postTimes",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["success", "agent"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/posts": {
      "get": {
        "tags": ["Posts"],
        "summary": "プロジェクトの投稿一覧を取得",
        "description": "指定されたプロジェクトIDに紐づく投稿の一覧を取得します",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string", "enum": ["draft", "posted", "scheduled"] },
            "required": false,
            "name": "status",
            "in": "query"
          },
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": false,
            "name": "policyId",
            "in": "query"
          },
          {
            "schema": { "type": "string", "format": "date-time" },
            "required": false,
            "name": "fromDate",
            "in": "query"
          },
          {
            "schema": { "type": "string", "format": "date-time" },
            "required": false,
            "name": "toDate",
            "in": "query"
          },
          {
            "schema": { "type": "number", "minimum": 1, "maximum": 100, "default": 50 },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": { "type": "number", "nullable": true, "minimum": 0, "default": 0 },
            "required": false,
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "投稿一覧",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "format": "uuid" },
                          "projectId": { "type": "string", "format": "uuid" },
                          "content": { "type": "string" },
                          "postType": {
                            "type": "string",
                            "enum": ["manual", "scheduled", "automated"]
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "draft",
                              "posted",
                              "scheduled",
                              "failed",
                              "publishing",
                              "partial",
                              "published"
                            ]
                          },
                          "agentId": { "type": "string", "nullable": true, "format": "uuid" },
                          "scenarioId": { "type": "string", "nullable": true },
                          "mediaUrl": { "type": "string", "nullable": true },
                          "scheduledAt": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time"
                          },
                          "publishedAt": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time"
                          },
                          "postedAt": { "type": "string", "nullable": true, "format": "date-time" },
                          "externalPostId": { "type": "string", "nullable": true },
                          "postUrl": { "type": "string", "nullable": true },
                          "errorMessage": { "type": "string", "nullable": true },
                          "retryCount": { "type": "number", "nullable": true },
                          "likes": { "type": "number" },
                          "shares": { "type": "number" },
                          "comments": { "type": "number" },
                          "reach": { "type": "number" },
                          "impressions": { "type": "number" },
                          "publishedCount": { "type": "number" },
                          "failedCount": { "type": "number" },
                          "totalTargets": { "type": "number" },
                          "targetStatus": { "type": "string", "nullable": true },
                          "targetAccountName": { "type": "string", "nullable": true },
                          "targetPlatformName": { "type": "string", "nullable": true },
                          "policyName": { "type": "string", "nullable": true },
                          "platformName": { "type": "string", "nullable": true },
                          "accountName": { "type": "string", "nullable": true },
                          "agentName": { "type": "string", "nullable": true },
                          "agentAvatarSeed": { "type": "string", "nullable": true },
                          "agentAvatarStyle": { "type": "string", "nullable": true },
                          "agentAvatarBgColor": { "type": "string", "nullable": true },
                          "agentImageUrl": { "type": "string", "nullable": true },
                          "createdAt": { "type": "string", "format": "date-time" },
                          "updatedAt": { "type": "string", "format": "date-time" }
                        },
                        "required": [
                          "id",
                          "projectId",
                          "content",
                          "postType",
                          "status",
                          "agentId",
                          "scenarioId",
                          "mediaUrl",
                          "scheduledAt",
                          "publishedAt",
                          "postedAt",
                          "externalPostId",
                          "postUrl",
                          "errorMessage",
                          "retryCount",
                          "likes",
                          "shares",
                          "comments",
                          "reach",
                          "impressions",
                          "publishedCount",
                          "failedCount",
                          "totalTargets",
                          "targetStatus",
                          "targetAccountName",
                          "targetPlatformName",
                          "policyName",
                          "platformName",
                          "accountName",
                          "agentName",
                          "agentAvatarSeed",
                          "agentAvatarStyle",
                          "agentAvatarBgColor",
                          "agentImageUrl",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "total": { "type": "number" },
                    "limit": { "type": "number" },
                    "offset": { "type": "number" }
                  },
                  "required": ["posts", "total", "limit", "offset"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/projects/{projectId}/posts/{postId}": {
      "get": {
        "tags": ["posts"],
        "summary": "投稿詳細取得",
        "description": "指定された投稿の詳細情報を取得します",
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "postId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "投稿詳細",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projectId": { "type": "string", "format": "uuid" },
                    "postId": { "type": "string", "format": "uuid" },
                    "id": { "type": "string", "format": "uuid" },
                    "content": { "type": "string" },
                    "mediaUrl": { "type": "string", "nullable": true },
                    "agentId": { "type": "string", "nullable": true, "format": "uuid" },
                    "scenarioId": { "type": "string", "nullable": true },
                    "scheduleId": { "type": "string", "nullable": true, "format": "uuid" },
                    "postType": { "type": "string", "enum": ["manual", "scheduled", "automated"] },
                    "formatId": { "type": "string", "nullable": true, "format": "uuid" },
                    "status": {
                      "type": "string",
                      "enum": ["draft", "scheduled", "posted", "failed"]
                    },
                    "scheduledAt": { "type": "string", "nullable": true },
                    "publishedAt": { "type": "string", "nullable": true },
                    "executedAt": { "type": "string", "nullable": true },
                    "externalPostId": { "type": "string", "nullable": true },
                    "postUrl": { "type": "string", "nullable": true },
                    "errorMessage": { "type": "string", "nullable": true },
                    "retryCount": { "type": "number", "nullable": true },
                    "likes": { "type": "number", "nullable": true },
                    "shares": { "type": "number", "nullable": true },
                    "comments": { "type": "number", "nullable": true },
                    "reach": { "type": "number", "nullable": true },
                    "impressions": { "type": "number", "nullable": true },
                    "createdAt": { "type": "string" },
                    "updatedAt": { "type": "string" },
                    "agent": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": { "type": "string", "format": "uuid" },
                        "name": { "type": "string" },
                        "direction": { "type": "string" },
                        "overview": { "type": "string", "nullable": true },
                        "imageUrl": { "type": "string", "nullable": true },
                        "avatarSeed": { "type": "string", "nullable": true },
                        "avatarStyle": { "type": "string", "nullable": true },
                        "avatarBgColor": { "type": "string", "nullable": true },
                        "videoAvatarImageUrl": { "type": "string", "nullable": true }
                      },
                      "required": [
                        "id",
                        "name",
                        "direction",
                        "overview",
                        "imageUrl",
                        "avatarSeed",
                        "avatarStyle",
                        "avatarBgColor",
                        "videoAvatarImageUrl"
                      ]
                    }
                  },
                  "required": [
                    "projectId",
                    "postId",
                    "id",
                    "content",
                    "mediaUrl",
                    "agentId",
                    "scenarioId",
                    "scheduleId",
                    "postType",
                    "formatId",
                    "status",
                    "scheduledAt",
                    "publishedAt",
                    "executedAt",
                    "externalPostId",
                    "postUrl",
                    "errorMessage",
                    "retryCount",
                    "likes",
                    "shares",
                    "comments",
                    "reach",
                    "impressions",
                    "createdAt",
                    "updatedAt",
                    "agent"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/posts/{postId}": {
      "patch": {
        "tags": ["Posts"],
        "parameters": [
          { "schema": { "type": "string" }, "required": true, "name": "postId", "in": "path" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": { "type": "string" },
                  "scheduledAt": { "type": "string", "nullable": true, "format": "date-time" },
                  "mediaUrl": { "type": "string", "nullable": true, "format": "uri" },
                  "status": {
                    "type": "string",
                    "enum": ["draft", "scheduled", "posted", "failed"]
                  },
                  "timezone": { "type": "string", "nullable": true, "maxLength": 100 }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "投稿が更新されました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "post": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "projectId": { "type": "string" },
                        "content": { "type": "string" },
                        "postType": {
                          "type": "string",
                          "enum": ["manual", "scheduled", "automated"]
                        },
                        "status": {
                          "type": "string",
                          "enum": ["draft", "scheduled", "posted", "failed"]
                        },
                        "scenarioId": { "type": "string", "nullable": true },
                        "mediaUrl": { "type": "string", "nullable": true },
                        "scheduledAt": { "type": "string", "nullable": true },
                        "publishedAt": { "type": "string", "nullable": true },
                        "externalPostId": { "type": "string", "nullable": true },
                        "postUrl": { "type": "string", "nullable": true },
                        "errorMessage": { "type": "string", "nullable": true },
                        "retryCount": { "type": "number", "nullable": true },
                        "likes": { "type": "number" },
                        "shares": { "type": "number" },
                        "comments": { "type": "number" },
                        "reach": { "type": "number" },
                        "impressions": { "type": "number" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "timezone": { "type": "string", "nullable": true }
                      },
                      "required": [
                        "id",
                        "projectId",
                        "content",
                        "postType",
                        "status",
                        "scenarioId",
                        "mediaUrl",
                        "scheduledAt",
                        "publishedAt",
                        "externalPostId",
                        "postUrl",
                        "errorMessage",
                        "retryCount",
                        "likes",
                        "shares",
                        "comments",
                        "reach",
                        "impressions",
                        "createdAt",
                        "updatedAt",
                        "timezone"
                      ]
                    }
                  },
                  "required": ["post"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["Posts"],
        "description": "投稿を削除します",
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "postId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "投稿削除成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/posts/{postId}/status": {
      "patch": {
        "tags": ["Posts"],
        "summary": "投稿のステータスを更新",
        "description": "指定された投稿のステータスを更新します（例：postedに変更）",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "postId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "enum": ["draft", "scheduled", "posted", "failed"] }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ステータス更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "uuid" },
                    "projectId": { "type": "string", "format": "uuid" },
                    "content": { "type": "string" },
                    "postType": { "type": "string", "enum": ["manual", "scheduled", "automated"] },
                    "status": {
                      "type": "string",
                      "enum": ["draft", "scheduled", "posted", "failed"]
                    },
                    "scenarioId": { "type": "string", "nullable": true },
                    "mediaUrl": { "type": "string", "nullable": true, "format": "uri" },
                    "scheduledAt": { "type": "string", "nullable": true, "format": "date-time" },
                    "publishedAt": { "type": "string", "nullable": true, "format": "date-time" },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "updatedAt": { "type": "string", "format": "date-time" }
                  },
                  "required": [
                    "id",
                    "projectId",
                    "content",
                    "postType",
                    "status",
                    "scenarioId",
                    "mediaUrl",
                    "scheduledAt",
                    "publishedAt",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/posts/publish": {
      "post": {
        "summary": "複数SNSへ投稿",
        "description": "投稿を複数のSNSアカウントに同時に公開します",
        "tags": ["Posts"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": { "type": "string", "format": "uuid" },
                  "accountIds": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" },
                    "minItems": 1
                  },
                  "scheduledAt": { "type": "string", "format": "date-time" },
                  "isScheduled": { "type": "boolean" }
                },
                "required": ["postId", "accountIds"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "投稿成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accountId": { "type": "string", "format": "uuid" },
                          "accountName": { "type": "string" },
                          "platform": {
                            "type": "string",
                            "enum": ["youtube", "tiktok", "instagram", "twitter", "facebook"]
                          },
                          "success": { "type": "boolean" },
                          "postId": { "type": "string" },
                          "postUrl": { "type": "string" },
                          "error": { "type": "string" }
                        },
                        "required": ["accountId", "accountName", "platform", "success"]
                      }
                    }
                  },
                  "required": ["success", "results"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/sns-accounts": {
      "get": {
        "summary": "プロジェクトのSNSアカウント一覧を取得",
        "description": "指定されたプロジェクトに連携されているSNSアカウントの一覧を取得します",
        "tags": ["SNS Accounts"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "SNSアカウント一覧の取得に成功しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "format": "uuid" },
                          "projectId": { "type": "string", "format": "uuid" },
                          "platform": {
                            "type": "string",
                            "enum": ["tiktok", "instagram", "twitter", "facebook", "youtube"]
                          },
                          "accountName": { "type": "string" },
                          "accountId": { "type": "string", "nullable": true },
                          "displayName": { "type": "string", "nullable": true },
                          "status": { "type": "string", "enum": ["active", "inactive", "error"] },
                          "isAutoPostEnabled": { "type": "boolean", "nullable": true },
                          "followerCount": { "type": "number", "nullable": true },
                          "postCount": { "type": "number", "nullable": true },
                          "lastPostedAt": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time"
                          },
                          "createdAt": { "type": "string", "format": "date-time" },
                          "updatedAt": { "type": "string", "format": "date-time" }
                        },
                        "required": [
                          "id",
                          "projectId",
                          "platform",
                          "accountName",
                          "accountId",
                          "displayName",
                          "status",
                          "isAutoPostEnabled",
                          "followerCount",
                          "postCount",
                          "lastPostedAt",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "totalAccounts": { "type": "number" },
                        "byPlatform": {
                          "type": "object",
                          "additionalProperties": { "type": "number" }
                        }
                      },
                      "required": ["totalAccounts", "byPlatform"]
                    }
                  },
                  "required": ["accounts", "summary"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/sns-accounts/{accountId}": {
      "delete": {
        "summary": "SNSアカウントの連携を解除",
        "description": "指定されたSNSアカウントの連携を解除します",
        "tags": ["SNS Accounts"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "format": "uuid" },
            "required": true,
            "name": "accountId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "SNSアカウントの連携解除に成功しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/tiktok/oauth/init": {
      "post": {
        "tags": ["TikTok"],
        "description": "TikTok OAuth認証を開始",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectId": { "type": "string", "format": "uuid" },
                  "redirectUri": { "type": "string", "format": "uri" }
                },
                "required": ["projectId", "redirectUri"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "認証URL生成成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorizationUrl": { "type": "string", "format": "uri" },
                    "state": { "type": "string" }
                  },
                  "required": ["authorizationUrl", "state"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/tiktok/oauth/callback": {
      "post": {
        "tags": ["TikTok"],
        "description": "TikTok OAuth認証のコールバック処理",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": { "type": "string", "minLength": 1 },
                  "state": { "type": "string", "minLength": 1 }
                },
                "required": ["code", "state"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "認証成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "accountName": { "type": "string" },
                    "message": { "type": "string" },
                    "snsAccountId": { "type": "string" }
                  },
                  "required": ["success", "accountName", "message", "snsAccountId"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/tiktok/posts": {
      "get": {
        "description": "Get TikTok posts for a specific user",
        "tags": ["TikTok"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "User ID to get posts for"
            },
            "required": true,
            "description": "User ID to get posts for",
            "name": "userId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "TikTok posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "postId": { "type": "string" },
                          "projectId": { "type": "string" },
                          "userId": { "type": "string" },
                          "userEmail": { "type": "string", "format": "email" },
                          "title": { "type": "string" },
                          "description": { "type": "string", "nullable": true },
                          "status": { "type": "string" },
                          "scheduledAt": { "type": "string", "nullable": true },
                          "publishedAt": { "type": "string", "nullable": true },
                          "platform": { "type": "string", "enum": ["tiktok"] },
                          "tiktokMetadata": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "tiktokVideoId": { "type": "string" },
                              "shareUrl": { "type": "string" },
                              "coverImageUrl": { "type": "string" },
                              "privacyLevel": { "type": "string" },
                              "viewCount": { "type": "number" },
                              "shareCount": { "type": "number" },
                              "commentCount": { "type": "number" },
                              "likeCount": { "type": "number" },
                              "lastAnalyticsUpdate": { "type": "string" }
                            }
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "postId",
                          "projectId",
                          "userId",
                          "userEmail",
                          "title",
                          "description",
                          "status",
                          "scheduledAt",
                          "publishedAt",
                          "platform",
                          "tiktokMetadata",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "total": { "type": "number" }
                  },
                  "required": ["posts", "total"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/tiktok/sync-stats": {
      "post": {
        "tags": ["TikTok"],
        "summary": "TikTok動画の統計情報を同期",
        "description": "TikTokに投稿された動画のエンゲージメントメトリクス（いいね、コメント、シェア、再生数）を取得して同期します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SyncTikTokVideoStatsRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "同期成功",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SyncTikTokVideoStatsResponse" }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/youtube/oauth/init": {
      "post": {
        "tags": ["YouTube"],
        "description": "YouTube OAuth認証を開始",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectId": { "type": "string", "format": "uuid" },
                  "redirectUri": { "type": "string", "format": "uri" },
                  "agentId": { "type": "string", "format": "uuid" }
                },
                "required": ["projectId", "redirectUri"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "認証URL生成成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorizationUrl": { "type": "string", "format": "uri" },
                    "state": { "type": "string" }
                  },
                  "required": ["authorizationUrl", "state"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/youtube/oauth/callback": {
      "post": {
        "tags": ["YouTube"],
        "description": "YouTube OAuth認証のコールバック処理",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": { "type": "string", "minLength": 1 },
                  "state": { "type": "string", "minLength": 1 }
                },
                "required": ["code", "state"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "認証成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "accountName": { "type": "string" },
                    "message": { "type": "string" }
                  },
                  "required": ["success", "accountName", "message"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/youtube/publish": {
      "post": {
        "summary": "YouTubeに投稿を公開",
        "description": "指定した投稿を選択したYouTubeアカウントに即座に公開します",
        "tags": ["YouTube"],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": { "type": "string", "format": "uuid" },
                  "accountIds": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" },
                    "minItems": 1
                  }
                },
                "required": ["postId", "accountIds"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "投稿成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accountId": { "type": "string" },
                          "accountName": { "type": "string" },
                          "success": { "type": "boolean" },
                          "videoId": { "type": "string" },
                          "videoUrl": { "type": "string" },
                          "error": { "type": "string" }
                        },
                        "required": ["accountId", "accountName", "success"]
                      }
                    }
                  },
                  "required": ["success", "results"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/youtube/sync-video-stats": {
      "post": {
        "summary": "YouTube動画の統計情報を同期",
        "description": "YouTube APIから動画の統計情報（いいね数、コメント数、再生回数）を取得し、投稿テーブルを更新します",
        "tags": ["YouTube"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectId": { "type": "string", "format": "uuid" },
                  "postIds": {
                    "type": "array",
                    "items": { "type": "string", "format": "uuid" },
                    "description": "同期する投稿IDの配列（指定しない場合は全ての投稿を同期）"
                  }
                },
                "required": ["projectId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "統計情報の同期に成功しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "syncedCount": { "type": "number", "description": "同期された投稿数" },
                    "failedCount": { "type": "number", "description": "同期に失敗した投稿数" },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "postId": { "type": "string", "format": "uuid" },
                          "success": { "type": "boolean" },
                          "error": { "type": "string" },
                          "stats": {
                            "type": "object",
                            "properties": {
                              "likes": { "type": "number" },
                              "comments": { "type": "number" },
                              "views": { "type": "number" }
                            },
                            "required": ["likes", "comments", "views"]
                          }
                        },
                        "required": ["postId", "success"]
                      }
                    }
                  },
                  "required": ["syncedCount", "failedCount", "results"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/scheduler/content/dispatch": {
      "post": {
        "security": [{ "Bearer": [] }],
        "tags": ["Scheduler"],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "type": "object", "properties": {} } } }
        },
        "responses": {
          "200": {
            "description": "コンテンツ生成タスクのディスパッチ結果",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "processedCount": { "type": "integer", "minimum": 0 },
                    "enqueuedCount": { "type": "integer", "minimum": 0 },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agentId": { "type": "string" },
                          "scheduleId": { "type": "string" },
                          "error": { "type": "string" }
                        },
                        "required": ["agentId", "scheduleId", "error"]
                      }
                    },
                    "timestamp": { "type": "string", "format": "date-time" }
                  },
                  "required": ["success", "processedCount", "enqueuedCount", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/scheduler/content/worker": {
      "post": {
        "security": [{ "Bearer": [] }],
        "tags": ["Scheduler"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scheduleId": { "type": "string", "format": "uuid" },
                  "agentId": { "type": "string", "format": "uuid" },
                  "projectId": { "type": "string", "format": "uuid" }
                },
                "required": ["scheduleId", "agentId", "projectId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "コンテンツ生成タスクの処理結果",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "scheduleId": { "type": "string", "format": "uuid" },
                    "agentId": { "type": "string", "format": "uuid" },
                    "projectId": { "type": "string", "format": "uuid" },
                    "generatedContent": {
                      "type": "object",
                      "properties": {
                        "workflowId": { "type": "string", "format": "uuid" },
                        "posts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "postId": { "type": "string", "format": "uuid" },
                              "status": { "type": "string" },
                              "content": { "type": "string" }
                            },
                            "required": ["postId", "status"]
                          }
                        },
                        "videos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "postId": { "type": "string", "format": "uuid" },
                              "videoUrl": { "type": "string" },
                              "thumbnailUrl": { "type": "string" }
                            },
                            "required": ["postId", "videoUrl"]
                          }
                        }
                      },
                      "required": ["workflowId"]
                    },
                    "error": { "type": "string" },
                    "processedAt": { "type": "string", "format": "date-time" }
                  },
                  "required": ["success", "scheduleId", "agentId", "projectId", "processedAt"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/scheduler/post/dispatch": {
      "post": {
        "summary": "スケジュール実行のディスパッチ",
        "description": "Cloud Schedulerから定期的に呼び出され、実行すべきスケジュールを検出してCloud Tasksにエンキューします",
        "tags": ["cloud-scheduler"],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "object", "properties": {} } } }
        },
        "responses": {
          "200": {
            "description": "ディスパッチ成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "processedCount": { "type": "number", "description": "処理された投稿数" },
                    "enqueuedCount": {
                      "type": "number",
                      "description": "Cloud Tasksにエンキューされたタスク数"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "postId": { "type": "string" },
                          "error": { "type": "string" }
                        },
                        "required": ["postId", "error"]
                      },
                      "description": "エラーがあった場合のエラー情報"
                    },
                    "executionTime": { "type": "number", "description": "実行時間（ミリ秒）" }
                  },
                  "required": ["success", "processedCount", "enqueuedCount", "executionTime"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/scheduler/post/worker": {
      "post": {
        "description": "Process scheduled task (called by Cloud Tasks)",
        "tags": ["cloud-tasks"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": { "type": "string", "format": "uuid" },
                  "scheduledAt": { "type": "string", "format": "date-time" },
                  "retryCount": { "type": "number", "default": 0 }
                },
                "required": ["postId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "postId": { "type": "string", "format": "uuid" },
                    "processedAt": { "type": "string", "format": "date-time" },
                    "status": { "type": "string", "enum": ["posted", "failed"] },
                    "error": { "type": "string" },
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "platform": { "type": "string" },
                          "status": { "type": "string", "enum": ["posted", "failed"] },
                          "error": { "type": "string" },
                          "externalPostId": { "type": "string" },
                          "postUrl": { "type": "string" }
                        },
                        "required": ["platform", "status"]
                      }
                    }
                  },
                  "required": ["success", "postId", "processedAt", "status", "posts"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/scheduler/metrics/sync-tiktok": {
      "post": {
        "tags": ["Scheduler"],
        "summary": "TikTok動画メトリクスの定期同期",
        "description": "Cloud Schedulerから定期的に呼び出され、TikTokに投稿された動画のメトリクスを同期します",
        "responses": {
          "200": {
            "description": "同期完了",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "processedProjects": { "type": "number" },
                    "syncedPosts": { "type": "number" },
                    "failedPosts": { "type": "number" },
                    "errors": { "type": "array", "items": { "type": "string" } },
                    "timestamp": { "type": "string" }
                  },
                  "required": [
                    "success",
                    "processedProjects",
                    "syncedPosts",
                    "failedPosts",
                    "timestamp"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/scheduler/metrics/sync-youtube": {
      "post": {
        "summary": "YouTube動画メトリクスの自動同期",
        "description": "Cloud Schedulerから定期実行される。すべてのアクティブなYouTubeアカウントの投稿メトリクスを同期する",
        "tags": ["Scheduler"],
        "responses": {
          "200": {
            "description": "YouTube統計情報の同期結果",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "processedProjects": { "type": "number" },
                    "syncedPosts": { "type": "number" },
                    "failedPosts": { "type": "number" },
                    "errors": { "type": "array", "items": { "type": "string" } },
                    "timestamp": { "type": "string" }
                  },
                  "required": [
                    "success",
                    "processedProjects",
                    "syncedPosts",
                    "failedPosts",
                    "timestamp"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/scheduler/metrics/dispatch": {
      "post": {
        "summary": "メトリクス同期タスクのスケジューリング",
        "description": "Cloud Schedulerから定期実行される。各プロジェクトのメトリクス同期タスクをCloud Tasksにエンキューする",
        "tags": ["Scheduler"],
        "responses": {
          "200": {
            "description": "スケジューリング結果",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "processedCount": { "type": "number" },
                    "enqueuedCount": { "type": "number" },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "projectId": { "type": "string" },
                          "platform": { "type": "string" },
                          "error": { "type": "string" }
                        },
                        "required": ["projectId", "platform", "error"]
                      }
                    },
                    "timestamp": { "type": "string" }
                  },
                  "required": ["success", "processedCount", "enqueuedCount", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/scheduler/metrics/worker": {
      "post": {
        "summary": "メトリクス同期タスクの処理",
        "description": "Cloud Tasksから呼び出される。個別プロジェクトのメトリクスを同期する",
        "tags": ["Scheduler"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectId": { "type": "string" },
                  "platform": { "type": "string", "enum": ["tiktok", "youtube"] },
                  "accountId": { "type": "string" },
                  "userId": { "type": "string" }
                },
                "required": ["projectId", "platform", "accountId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "同期処理結果",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "projectId": { "type": "string" },
                    "platform": { "type": "string" },
                    "syncedCount": { "type": "number" },
                    "failedCount": { "type": "number" },
                    "errors": { "type": "array", "items": { "type": "string" } },
                    "processedAt": { "type": "string" }
                  },
                  "required": [
                    "success",
                    "projectId",
                    "platform",
                    "syncedCount",
                    "failedCount",
                    "processedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "クライアントからのリクエストに問題があり、サーバーが処理を完了できませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrBadRequest" } }
            }
          },
          "401": {
            "description": "認証が必要です。アクセストークンが無効か期限切れの可能性があります。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrUnauthorized" } }
            }
          },
          "403": {
            "description": "この操作を実行する権限がありません。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrForbidden" } }
            }
          },
          "404": {
            "description": "リクエストされたリソースが見つかりませんでした。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrNotFound" } }
            }
          },
          "409": {
            "description": "リソースの競合が発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrConflict" } }
            }
          },
          "500": {
            "description": "サーバー内部でエラーが発生しました。",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrInternalServer" } }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "tags": ["system"],
        "summary": "ヘルスチェック",
        "description": "APIサーバーの稼働状況を確認します",
        "responses": {
          "200": {
            "description": "サーバー正常稼働中",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["ok"] },
                    "timestamp": { "type": "string", "format": "date-time" },
                    "version": { "type": "string" },
                    "uptime": { "type": "number" }
                  },
                  "required": ["status", "timestamp", "version", "uptime"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plans": {
      "get": {
        "tags": ["billing"],
        "summary": "Get available plans",
        "description": "Get list of available subscription plans",
        "parameters": [
          {
            "schema": { "type": "string", "enum": ["ja", "en"], "default": "en" },
            "required": false,
            "name": "locale",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available plans",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "enum": ["free", "standard", "pro"] },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "monthlyPrice": { "type": "number" },
                          "yearlyPrice": { "type": "number" },
                          "features": {
                            "type": "object",
                            "properties": {
                              "projectLimit": { "type": "number" },
                              "monthlyCredits": { "type": "number" },
                              "policiesPerProject": { "type": "number" },
                              "snsAccounts": { "type": "number" },
                              "apiAccess": { "type": "boolean" },
                              "export": { "type": "boolean" },
                              "prioritySupport": { "type": "boolean" },
                              "customBranding": { "type": "boolean" }
                            },
                            "required": [
                              "projectLimit",
                              "monthlyCredits",
                              "policiesPerProject",
                              "snsAccounts",
                              "apiAccess",
                              "export",
                              "prioritySupport",
                              "customBranding"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "monthlyPrice",
                          "yearlyPrice",
                          "features"
                        ]
                      }
                    }
                  },
                  "required": ["plans"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/subscription": {
      "get": {
        "tags": ["billing"],
        "summary": "Get current subscription",
        "description": "Get current user subscription details",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Current subscription or null",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "subscriptionId": { "type": "string" },
                    "plan": { "type": "string", "enum": ["free", "standard", "pro"] },
                    "status": {
                      "type": "string",
                      "enum": ["active", "canceled", "past_due", "unpaid", "incomplete"]
                    },
                    "billingCycle": { "type": "string", "enum": ["monthly", "yearly"] },
                    "nextPlan": {
                      "type": "string",
                      "nullable": true,
                      "enum": ["free", "standard", "pro"]
                    },
                    "nextBillingCycle": {
                      "type": "string",
                      "nullable": true,
                      "enum": ["monthly", "yearly"]
                    },
                    "planChangeAt": { "type": "string", "nullable": true, "format": "date-time" },
                    "currentPeriodStart": { "type": "string", "format": "date-time" },
                    "currentPeriodEnd": { "type": "string", "format": "date-time" },
                    "cancelAt": { "type": "string", "nullable": true, "format": "date-time" },
                    "canceledAt": { "type": "string", "nullable": true, "format": "date-time" }
                  },
                  "required": [
                    "subscriptionId",
                    "plan",
                    "status",
                    "billingCycle",
                    "nextPlan",
                    "nextBillingCycle",
                    "planChangeAt",
                    "currentPeriodStart",
                    "currentPeriodEnd",
                    "cancelAt",
                    "canceledAt"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["billing"],
        "summary": "Update subscription",
        "description": "Update subscription plan or billing cycle",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planId": { "type": "string", "enum": ["standard", "pro"] },
                  "billingCycle": { "type": "string", "enum": ["monthly", "yearly"] }
                },
                "required": ["planId", "billingCycle"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscription updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subscriptionId": { "type": "string" },
                    "plan": { "type": "string" },
                    "billingCycle": { "type": "string" },
                    "nextPlan": { "type": "string", "nullable": true },
                    "nextBillingCycle": { "type": "string", "nullable": true },
                    "planChangeAt": { "type": "string", "nullable": true },
                    "status": { "type": "string" },
                    "message": { "type": "string" }
                  },
                  "required": [
                    "subscriptionId",
                    "plan",
                    "billingCycle",
                    "nextPlan",
                    "nextBillingCycle",
                    "planChangeAt",
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["billing"],
        "summary": "Cancel subscription",
        "description": "Cancel subscription immediately or at period end",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "immediately": { "type": "boolean", "default": false } }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscription canceled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subscriptionId": { "type": "string" },
                    "cancelAt": { "type": "string", "nullable": true },
                    "message": { "type": "string" }
                  },
                  "required": ["subscriptionId", "cancelAt", "message"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/history": {
      "get": {
        "tags": ["billing"],
        "summary": "Get payment history",
        "description": "Get user payment history",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "pattern": "^\\d+$", "default": "10" },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "paymentId": { "type": "string" },
                          "amount": { "type": "number" },
                          "currency": { "type": "string" },
                          "status": {
                            "type": "string",
                            "enum": ["pending", "succeeded", "failed"]
                          },
                          "description": { "type": "string", "nullable": true },
                          "paidAt": { "type": "string", "nullable": true, "format": "date-time" },
                          "createdAt": { "type": "string", "format": "date-time" }
                        },
                        "required": [
                          "paymentId",
                          "amount",
                          "currency",
                          "status",
                          "description",
                          "paidAt",
                          "createdAt"
                        ]
                      }
                    },
                    "hasMore": { "type": "boolean" }
                  },
                  "required": ["payments", "hasMore"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/checkout": {
      "post": {
        "tags": ["billing"],
        "summary": "Create checkout session",
        "description": "Create a Stripe checkout session for subscription",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planId": { "type": "string", "enum": ["free", "standard", "pro"] },
                  "billingCycle": { "type": "string", "enum": ["monthly", "yearly"] },
                  "locale": { "type": "string", "enum": ["ja", "en"], "default": "ja" }
                },
                "required": ["planId", "billingCycle"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Checkout session created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checkoutUrl": { "type": "string", "format": "uri" },
                    "sessionId": { "type": "string" }
                  },
                  "required": ["checkoutUrl", "sessionId"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stripe/webhook": {
      "post": {
        "tags": ["webhook"],
        "summary": "Stripe webhook endpoint",
        "description": "Endpoint to receive Stripe webhook events",
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "stripe-signature",
            "in": "header"
          }
        ],
        "requestBody": { "content": { "text/plain": { "schema": { "type": "string" } } } },
        "responses": {
          "200": {
            "description": "Webhook processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "received": { "type": "boolean" } },
                  "required": ["received"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid webhook signature",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    }
  }
}
